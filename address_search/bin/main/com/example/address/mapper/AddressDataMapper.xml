<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.example.demo.AddressDataMapper" >
  <resultMap id="BaseResultMap" type="com.example.demo.AddressData" >
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
      This element was generated on Thu Jul 19 09:23:25 JST 2018.
    -->
    <id column="id" property="id" jdbcType="INTEGER" />
    <result column="jiscode" property="jiscode" jdbcType="VARCHAR" />
    <result column="zipcode_old" property="zipcodeOld" jdbcType="VARCHAR" />
    <result column="zipcode" property="zipcode" jdbcType="VARCHAR" />
    <result column="pref_kana" property="prefKana" jdbcType="VARCHAR" />
    <result column="city_kana" property="cityKana" jdbcType="VARCHAR" />
    <result column="street_kana" property="streetKana" jdbcType="VARCHAR" />
    <result column="pref" property="pref" jdbcType="VARCHAR" />
    <result column="city" property="city" jdbcType="VARCHAR" />
    <result column="street" property="street" jdbcType="VARCHAR" />
    <result column="flag1" property="flag1" jdbcType="TINYINT" />
    <result column="flag2" property="flag2" jdbcType="TINYINT" />
    <result column="flag3" property="flag3" jdbcType="TINYINT" />
    <result column="flag4" property="flag4" jdbcType="TINYINT" />
    <result column="flag5" property="flag5" jdbcType="TINYINT" />
    <result column="flag6" property="flag6" jdbcType="TINYINT" />
  </resultMap>
  <sql id="Example_Where_Clause" >
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
      This element was generated on Thu Jul 19 09:23:25 JST 2018.
    -->
    <where >
      <foreach collection="oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause" >
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
      This element was generated on Thu Jul 19 09:23:25 JST 2018.
    -->
    <where >
      <foreach collection="example.oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List" >
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
      This element was generated on Thu Jul 19 09:23:25 JST 2018.
    -->
    id, jiscode, zipcode_old, zipcode, pref_kana, city_kana, street_kana, pref, city, 
    street, flag1, flag2, flag3, flag4, flag5, flag6
  </sql>
  <select id="selectByExample" resultMap="BaseResultMap" parameterType="com.example.demo.AddressDataExample" >
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
      This element was generated on Thu Jul 19 09:23:25 JST 2018.
    -->
    select
    <if test="distinct" >
      distinct
    </if>
    <include refid="Base_Column_List" />
    from address_data
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null" >
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.Integer" >
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
      This element was generated on Thu Jul 19 09:23:25 JST 2018.
    -->
    select 
    <include refid="Base_Column_List" />
    from address_data
    where id = #{id,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer" >
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
      This element was generated on Thu Jul 19 09:23:25 JST 2018.
    -->
    delete from address_data
    where id = #{id,jdbcType=INTEGER}
  </delete>
  <delete id="deleteByExample" parameterType="com.example.demo.AddressDataExample" >
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
      This element was generated on Thu Jul 19 09:23:25 JST 2018.
    -->
    delete from address_data
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="com.example.demo.AddressData" >
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
      This element was generated on Thu Jul 19 09:23:25 JST 2018.
    -->
    insert into address_data (id, jiscode, zipcode_old, 
      zipcode, pref_kana, city_kana, 
      street_kana, pref, city, 
      street, flag1, flag2, 
      flag3, flag4, flag5, 
      flag6)
    values (#{id,jdbcType=INTEGER}, #{jiscode,jdbcType=VARCHAR}, #{zipcodeOld,jdbcType=VARCHAR}, 
      #{zipcode,jdbcType=VARCHAR}, #{prefKana,jdbcType=VARCHAR}, #{cityKana,jdbcType=VARCHAR}, 
      #{streetKana,jdbcType=VARCHAR}, #{pref,jdbcType=VARCHAR}, #{city,jdbcType=VARCHAR}, 
      #{street,jdbcType=VARCHAR}, #{flag1,jdbcType=TINYINT}, #{flag2,jdbcType=TINYINT}, 
      #{flag3,jdbcType=TINYINT}, #{flag4,jdbcType=TINYINT}, #{flag5,jdbcType=TINYINT}, 
      #{flag6,jdbcType=TINYINT})
  </insert>
  <insert id="insertSelective" parameterType="com.example.demo.AddressData" >
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
      This element was generated on Thu Jul 19 09:23:25 JST 2018.
    -->
    insert into address_data
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        id,
      </if>
      <if test="jiscode != null" >
        jiscode,
      </if>
      <if test="zipcodeOld != null" >
        zipcode_old,
      </if>
      <if test="zipcode != null" >
        zipcode,
      </if>
      <if test="prefKana != null" >
        pref_kana,
      </if>
      <if test="cityKana != null" >
        city_kana,
      </if>
      <if test="streetKana != null" >
        street_kana,
      </if>
      <if test="pref != null" >
        pref,
      </if>
      <if test="city != null" >
        city,
      </if>
      <if test="street != null" >
        street,
      </if>
      <if test="flag1 != null" >
        flag1,
      </if>
      <if test="flag2 != null" >
        flag2,
      </if>
      <if test="flag3 != null" >
        flag3,
      </if>
      <if test="flag4 != null" >
        flag4,
      </if>
      <if test="flag5 != null" >
        flag5,
      </if>
      <if test="flag6 != null" >
        flag6,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        #{id,jdbcType=INTEGER},
      </if>
      <if test="jiscode != null" >
        #{jiscode,jdbcType=VARCHAR},
      </if>
      <if test="zipcodeOld != null" >
        #{zipcodeOld,jdbcType=VARCHAR},
      </if>
      <if test="zipcode != null" >
        #{zipcode,jdbcType=VARCHAR},
      </if>
      <if test="prefKana != null" >
        #{prefKana,jdbcType=VARCHAR},
      </if>
      <if test="cityKana != null" >
        #{cityKana,jdbcType=VARCHAR},
      </if>
      <if test="streetKana != null" >
        #{streetKana,jdbcType=VARCHAR},
      </if>
      <if test="pref != null" >
        #{pref,jdbcType=VARCHAR},
      </if>
      <if test="city != null" >
        #{city,jdbcType=VARCHAR},
      </if>
      <if test="street != null" >
        #{street,jdbcType=VARCHAR},
      </if>
      <if test="flag1 != null" >
        #{flag1,jdbcType=TINYINT},
      </if>
      <if test="flag2 != null" >
        #{flag2,jdbcType=TINYINT},
      </if>
      <if test="flag3 != null" >
        #{flag3,jdbcType=TINYINT},
      </if>
      <if test="flag4 != null" >
        #{flag4,jdbcType=TINYINT},
      </if>
      <if test="flag5 != null" >
        #{flag5,jdbcType=TINYINT},
      </if>
      <if test="flag6 != null" >
        #{flag6,jdbcType=TINYINT},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.example.demo.AddressDataExample" resultType="java.lang.Integer" >
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
      This element was generated on Thu Jul 19 09:23:25 JST 2018.
    -->
    select count(*) from address_data
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map" >
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
      This element was generated on Thu Jul 19 09:23:25 JST 2018.
    -->
    update address_data
    <set >
      <if test="record.id != null" >
        id = #{record.id,jdbcType=INTEGER},
      </if>
      <if test="record.jiscode != null" >
        jiscode = #{record.jiscode,jdbcType=VARCHAR},
      </if>
      <if test="record.zipcodeOld != null" >
        zipcode_old = #{record.zipcodeOld,jdbcType=VARCHAR},
      </if>
      <if test="record.zipcode != null" >
        zipcode = #{record.zipcode,jdbcType=VARCHAR},
      </if>
      <if test="record.prefKana != null" >
        pref_kana = #{record.prefKana,jdbcType=VARCHAR},
      </if>
      <if test="record.cityKana != null" >
        city_kana = #{record.cityKana,jdbcType=VARCHAR},
      </if>
      <if test="record.streetKana != null" >
        street_kana = #{record.streetKana,jdbcType=VARCHAR},
      </if>
      <if test="record.pref != null" >
        pref = #{record.pref,jdbcType=VARCHAR},
      </if>
      <if test="record.city != null" >
        city = #{record.city,jdbcType=VARCHAR},
      </if>
      <if test="record.street != null" >
        street = #{record.street,jdbcType=VARCHAR},
      </if>
      <if test="record.flag1 != null" >
        flag1 = #{record.flag1,jdbcType=TINYINT},
      </if>
      <if test="record.flag2 != null" >
        flag2 = #{record.flag2,jdbcType=TINYINT},
      </if>
      <if test="record.flag3 != null" >
        flag3 = #{record.flag3,jdbcType=TINYINT},
      </if>
      <if test="record.flag4 != null" >
        flag4 = #{record.flag4,jdbcType=TINYINT},
      </if>
      <if test="record.flag5 != null" >
        flag5 = #{record.flag5,jdbcType=TINYINT},
      </if>
      <if test="record.flag6 != null" >
        flag6 = #{record.flag6,jdbcType=TINYINT},
      </if>
    </set>
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map" >
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
      This element was generated on Thu Jul 19 09:23:25 JST 2018.
    -->
    update address_data
    set id = #{record.id,jdbcType=INTEGER},
      jiscode = #{record.jiscode,jdbcType=VARCHAR},
      zipcode_old = #{record.zipcodeOld,jdbcType=VARCHAR},
      zipcode = #{record.zipcode,jdbcType=VARCHAR},
      pref_kana = #{record.prefKana,jdbcType=VARCHAR},
      city_kana = #{record.cityKana,jdbcType=VARCHAR},
      street_kana = #{record.streetKana,jdbcType=VARCHAR},
      pref = #{record.pref,jdbcType=VARCHAR},
      city = #{record.city,jdbcType=VARCHAR},
      street = #{record.street,jdbcType=VARCHAR},
      flag1 = #{record.flag1,jdbcType=TINYINT},
      flag2 = #{record.flag2,jdbcType=TINYINT},
      flag3 = #{record.flag3,jdbcType=TINYINT},
      flag4 = #{record.flag4,jdbcType=TINYINT},
      flag5 = #{record.flag5,jdbcType=TINYINT},
      flag6 = #{record.flag6,jdbcType=TINYINT}
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="com.example.demo.AddressData" >
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
      This element was generated on Thu Jul 19 09:23:25 JST 2018.
    -->
    update address_data
    <set >
      <if test="jiscode != null" >
        jiscode = #{jiscode,jdbcType=VARCHAR},
      </if>
      <if test="zipcodeOld != null" >
        zipcode_old = #{zipcodeOld,jdbcType=VARCHAR},
      </if>
      <if test="zipcode != null" >
        zipcode = #{zipcode,jdbcType=VARCHAR},
      </if>
      <if test="prefKana != null" >
        pref_kana = #{prefKana,jdbcType=VARCHAR},
      </if>
      <if test="cityKana != null" >
        city_kana = #{cityKana,jdbcType=VARCHAR},
      </if>
      <if test="streetKana != null" >
        street_kana = #{streetKana,jdbcType=VARCHAR},
      </if>
      <if test="pref != null" >
        pref = #{pref,jdbcType=VARCHAR},
      </if>
      <if test="city != null" >
        city = #{city,jdbcType=VARCHAR},
      </if>
      <if test="street != null" >
        street = #{street,jdbcType=VARCHAR},
      </if>
      <if test="flag1 != null" >
        flag1 = #{flag1,jdbcType=TINYINT},
      </if>
      <if test="flag2 != null" >
        flag2 = #{flag2,jdbcType=TINYINT},
      </if>
      <if test="flag3 != null" >
        flag3 = #{flag3,jdbcType=TINYINT},
      </if>
      <if test="flag4 != null" >
        flag4 = #{flag4,jdbcType=TINYINT},
      </if>
      <if test="flag5 != null" >
        flag5 = #{flag5,jdbcType=TINYINT},
      </if>
      <if test="flag6 != null" >
        flag6 = #{flag6,jdbcType=TINYINT},
      </if>
    </set>
    where id = #{id,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.example.demo.AddressData" >
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
      This element was generated on Thu Jul 19 09:23:25 JST 2018.
    -->
    update address_data
    set jiscode = #{jiscode,jdbcType=VARCHAR},
      zipcode_old = #{zipcodeOld,jdbcType=VARCHAR},
      zipcode = #{zipcode,jdbcType=VARCHAR},
      pref_kana = #{prefKana,jdbcType=VARCHAR},
      city_kana = #{cityKana,jdbcType=VARCHAR},
      street_kana = #{streetKana,jdbcType=VARCHAR},
      pref = #{pref,jdbcType=VARCHAR},
      city = #{city,jdbcType=VARCHAR},
      street = #{street,jdbcType=VARCHAR},
      flag1 = #{flag1,jdbcType=TINYINT},
      flag2 = #{flag2,jdbcType=TINYINT},
      flag3 = #{flag3,jdbcType=TINYINT},
      flag4 = #{flag4,jdbcType=TINYINT},
      flag5 = #{flag5,jdbcType=TINYINT},
      flag6 = #{flag6,jdbcType=TINYINT}
    where id = #{id,jdbcType=INTEGER}
  </update>
</mapper>